# -*- Mode:python; indent-tabs-mode:nil; coding:utf-8 -*-

RPC_SERVER_SOURCES = [
    "rpc_http_server.cc",
]
RPC_SOURCES = [
    # "thrift_http_async_channel.cc",
    # "thrift_util.cc",
    "rpc_controller.cc",
    "rpc_http_client.cc",
    "codec/rpc_json_decoder.cc",
    "codec/rpc_json_encoder.cc",
]

def build(ctx):
    sources = list(RPC_SOURCES)
    if not ctx.env.IOS and not ctx.env.ANDROID:
        sources.extend(RPC_SERVER_SOURCES)
    ctx.add_lib(
        ctx,
        toplib = 'whisperlib',
        name = 'whisperlib.rpc',
        target = 'whisperlib',
        source = sources)
    ctx.install_all_includes(ctx)

    return
    ctx.proto_lib(ctx,
                  name = 'rpc.TestProto_pb',
                  target = 'rpc_test_proto_pb',
                  source = ['test/rpc_test_proto.proto'],
                  install_dir_h = False)

    ctx.add_whisper_tests(ctx, ['rpc_test_server.cc',
                                'rpc_test_client.cc'],
                          extra_use = ['rpc_test_proto_pb'],
                          extra_lib = ['rpc_test_proto_pb'])
